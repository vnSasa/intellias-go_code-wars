package task4kyu

// https://www.codewars.com/kata/52ec24228a515e620b0005ef

func ExpSum(n uint64) uint64 {
	table := make([]uint64, n+1)
	table[0] = 1

	for i := uint64(1); i <= n; i++ {
		for j := i; j <= n; j++ {
			table[j] += table[j-i]
		}
	}

	return table[n]
}

/*
   Ця функція реалізує обчислення суми експонент у вигляді таблиці. Дозволяючи обчислити суму експонент з використанням додавання елементів з попередніх ітерацій.
   Основні кроки функції:
       1. Створюється таблиця table розміром n+1, де кожен елемент початково ініціалізується нулем, крім першого елемента table[0], який встановлюється рівним 1. Це відбувається за допомогою функції make, яка створює сріз типу []uint64 з довжиною n+1.
       2. Починаючи з 1-го ітератора i до значення n, проходить зовнішній цикл for, в якому обчислюється сума експонент для чисел до n.
       3. У внутрішньому циклі for, починаючи з i-го ітератора j до значення n, виконується додавання попередньо обчислених сум експонент. Кожний елемент table[j] збільшується на значення table[j-i]. Це дозволяє додати до поточного числа j всі можливі комбінації експонент попередніх чисел.
       4.Після завершення внутрішнього циклу повертається значення останнього елемента таблиці table[n], яке є результатом обчислення суми експонент для чисел від 1 до n.
   Отже, функція ExpSum використовує динамічне програмування для швидкого обчислення суми експонент за допомогою таблиці, уникнення повторних обчислень і використання проміжних результатів.
*/
