package task4kyu

// https://www.codewars.com/kata/5254ca2719453dcc0b00027d

import (
	"sort"
)

func Permutations(s string) []string {
	if len(s) <= 1 {
		return []string{s}
	}

	result := make(map[string]bool)

	for i, c := range s {
		sub := s[:i] + s[i+1:]
		for _, perm := range Permutations(sub) {
			str := string(c) + perm
			result[str] = true
		}
	}

	keys := make([]string, 0, len(result))
	for k := range result {
		keys = append(keys, k)
	}
	sort.Strings(keys)

	return keys

	/*
		Функція Permutations приймає рядок s і повертає всі можливі перестановки цього рядка у вигляді масиву рядків.
		Опишемо дії, які відбуваються в цій функції:
		- Спочатку перевіряється довжина рядка s. Якщо його довжина менше або дорівнює 1, то функція повертає масив, що містить один елемент - сам рядок s. Це базовий випадок рекурсії.
		- Створюється мапа result, яка використовуватиметься для збереження унікальних перестановок рядка s.
		- Запускається цикл for, який проходиться по всіх індексах і символах рядка s. Для кожного символу c у рядку s формується новий рядок sub, в якому видаляється символ з позиції i.
		- Вкладений цикл for використовує рекурсивний виклик функції Permutations для рядка sub. Для кожної отриманої перестановки perm формується новий рядок str, який складається з символа c та перестановки perm.
		- Отриманий рядок str додається до мапи result з ключем str і значенням true. Використовується мапа для автоматичного відбору унікальних перестановок.
		- Після завершення циклів, мапа result містить усі унікальні перестановки рядка s.
		- Створюється масив keys для збереження ключів (перестановок) з мапи result.
		- Запускається цикл for для отримання всіх ключів k з мапи result. Кожен ключ додається до масиву keys за допомогою функції append.
		- Масив keys сортується за зростанням за допомогою функції sort.Strings.
		- Відсортований масив keys повертається як вихідний результат функції Permutations. Це масив, що містить усі унікальні перестановки рядка s, відсортовані в лексикографічному порядку.
		Отже, функція Permutations використовує рекурсивний підхід для знаходження усіх можливих перестановок рядка s. Вона формує унікальні перестановки за допомогою мапи result і повертає їх у відсортованому порядку за допомогою масиву keys.
	*/
}
